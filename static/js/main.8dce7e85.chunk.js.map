{"version":3,"sources":["components/Header.js","contexts/currentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/constants.js","utils/api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js","images/header/header-logo.svg"],"names":["Header","className","alt","src","logo","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","card","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardClick","type","evt","onCardDelete","link","name","onCardLike","length","Main","onEditAvatar","style","backgroundImage","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","PopupWithForm","title","submitName","isOpen","onClose","onSubmit","children","action","noValidate","ImagePopup","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","target","reset","onUpdateUser","id","value","onChange","event","placeholder","required","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","apiParams","_handleError","res","ok","json","console","log","Promise","reject","status","api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","data","method","body","JSON","stringify","isntLike","putLike","deleteLike","all","getUserInfo","getCardsFromServer","authorization","renderError","err","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImageCardPopupOpen","setIsImageCardPopupOpen","isSubmitPopupOpen","setIsSubmitPopupOpen","selectedCard","setSelectedCard","setCards","closeAllPopups","initialUserInfo","catch","error","initialCardList","cardList","Provider","changeLikeCardStatus","newCard","newCards","c","stopPropagation","removeCard","filter","changeUserInfo","changeAvatar","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.8dce7e85.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/header/header-logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header page__header section\">\r\n      <img className=\"header__logo\" alt=\"Логотип проекта Место\" src={logo} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nconst Card = (props) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const card = props.card;\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `element__btn-trash ${isOwn ? 'element__btn-trash_active' : ''}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = (\r\n    `element__btn-like ${isLiked ? 'element__btn-like_active' : ''}`\r\n  );\r\n\r\n\r\n  function handleClick() {\r\n    props.onCardClick(card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick(evt) {\r\n    props.onCardDelete(evt, card);\r\n  }\r\n\r\n\r\n  return (\r\n    < div className='element'>\r\n      <div className='element__container' onClick={handleClick}>\r\n        {isOwn && <button type='button' className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>}\r\n        <img className='element__img' src={card.link} alt={card.alt} />\r\n      </div>\r\n      <div className='element__info'>\r\n        <h2 className='element__title'>{card.name}</h2>\r\n        <div className='element__like-group'>\r\n          <button type='button' className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <p className='element__like-sum'>{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nfunction Main(props) {\r\n  // Подписываемся на контекст TranslationContext\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content page__content\">\r\n      <section className=\"profile section\">\r\n        <div className=\"profile__main\">\r\n          <div className=\"profile__avatar-box\" onClick={props.onEditAvatar} style={{ backgroundImage: `url(${currentUser.avatar})` }} >\r\n\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__info-editor\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button type=\"button\" className=\"profile__btn-edit\" onClick={props.onEditProfile}></button>\r\n            </div>\r\n            <p className=\"profile__status\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__btn-add\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements section\">\r\n        {props.cards.map((card) =>\r\n\r\n          <Card key={card._id} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <footer className=\"footer section page__footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, submitName, isOpen, onClose, onSubmit, children }) {\r\n  return (\r\n    <div className={`popup popup_type_${name}  ${isOpen && 'popup_opened'}`}>\r\n      <div className='popup__container'>\r\n        <button type='button' className='popup__btn-close' onClick={onClose}></button>\r\n\r\n        <form name={`popup__form-${name}`} onSubmit={onSubmit} className='popup__form' action='#' noValidate>\r\n          <h2 className='popup__title'>{title}</h2>\r\n          {children}\r\n          <button type='submit' className='popup__btn-save'>{submitName}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ name, isOpen, onClose, card }) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`}>\r\n      <div className='popup__img-container'>\r\n        <button type='button' className='popup__btn-close' onClick={onClose}></button>\r\n\r\n        <img className='popup__img' src={card.link} alt={card.alt} />\r\n        <p className='popup__caption'>{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  // Подписка на контекст\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n\r\n  function handleDescriptionChange(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n\r\n  // После загрузки текущего пользователя из API\r\n  // его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='profile'\r\n      title='Редактировать профиль'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n\r\n      <label className='popup__form-field'>\r\n        <input id='name-input' name='popup__input-name' value={name || ''} onChange={handleNameChange} type='text' placeholder='Имя' className='popup__input popup__input_type_name' required minLength='2' maxLength='40' />\r\n        <span id='name-input-error' className='popup__input-error'></span>\r\n      </label>\r\n      <label className='popup__form-field'>\r\n        <input id='status-input' name='popup__input-status' value={description || ''} onChange={handleDescriptionChange} type='text' placeholder='Вид деятельности' className='popup__input popup__input_type_status' required minLength='2' maxLength='200' />\r\n        <span id='status-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value/* Значение инпута, полученное с помощью рефа */,\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='avatar'\r\n      title='Обновить аватар'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__form-field'>\r\n        <input id='avatar-input' name='popup__input-avatar' ref={avatarRef} type='url' placeholder='Ссылка на картинку' className='popup__input popup__input_type_avatar' required />\r\n        <span id='avatar-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link\r\n    });\r\n    e.target.reset();\r\n  }\r\n\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n\r\n  function handleLinkChange(event) {\r\n    setLink(event.target.value);\r\n  }\r\n\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='new-place'\r\n      title='Новое место'\r\n      submitName='Сохранить'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__form-field'>\r\n        <input id='new-place-name-input' name='popup__input-new-place-name' value={name || ''} onChange={handleNameChange} type='text' placeholder='Название' className='popup__input popup__input_type_new-place-name' required minLength='1' maxLength='30' />\r\n        <span id='new-place-name-input-error' className='popup__input-error'></span>\r\n      </label>\r\n      <label className='popup__form-field'>\r\n        <input id='new-place-img-input' name='popup__input-new-place-img' value={link || ''} onChange={handleLinkChange} type='url' placeholder='Ссылка на картинку' className='popup__input popup__input_type_new-place-img' required />\r\n        <span id='new-place-img-input-error' className='popup__input-error'></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","// для Api\r\nconst apiParams = {\r\n  baseUrl: 'https://mesto.nomoreparties.co',\r\n  cohortId: 'cohort-15',\r\n  token: '8d0efc77-0d4b-4bf8-ae49-d7668927bf3c'\r\n};\r\n\r\n\r\nexport { apiParams };\r\n","import {\r\n  apiParams\r\n} from './constants.js';\r\n\r\nconst _handleError = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  else {\r\n    console.log(`Неудачный запрос fentch`);\r\n    return Promise.reject(res.status);\r\n  }\r\n}\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n\r\n  changeUserInfo(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(\r\n        data\r\n      )\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  getCardsFromServer() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  removeCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  putLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(_handleError);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isntLike) {\r\n    if (isntLike) {\r\n      return this.putLike(id);\r\n    }\r\n    else {\r\n\r\n      return this.deleteLike(id);\r\n    }\r\n  }\r\n\r\n  getAppInfo() {\r\n    return Promise.all([this.getUserInfo(), this.getCardsFromServer()]);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: apiParams.baseUrl + '/v1/' + apiParams.cohortId,\r\n  headers: {\r\n    authorization: apiParams.token,\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","export const renderLoading = (isLoading, btnSubmit, btnText) => {\r\n  if (isLoading) {\r\n    btnSubmit.innerText = btnText;\r\n  }\r\n  else {\r\n    btnSubmit.innerText = btnText;\r\n  }\r\n}\r\n\r\n\r\nexport const renderError = (err) => {\r\n  console.log(err);\r\n}","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { CurrentUserContext } from '../contexts/currentUserContext';\r\nimport api from '../utils/api.js';\r\nimport { renderError } from '../utils/utils.js';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\r\n  const [isImageCardPopupOpen, setIsImageCardPopupOpen] = React.useState(false);\r\n  const [isSubmitPopupOpen, setIsSubmitPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({ ...card });\r\n    setIsImageCardPopupOpen(true);\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(event, card) {\r\n    event.stopPropagation();\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.removeCard(card._id).then(() => {\r\n      // Создаем копию массива, исключив из него удалённую карточку\r\n      const newCards = cards.filter((c) => c._id !== card._id);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api.changeUserInfo({ name, about }).then(data => {\r\n      setCurrentUser(data);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  function handleUpdateAvatar({ avatar }) {\r\n    api.changeAvatar({ avatar }).then(data => {\r\n      setCurrentUser(data);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit({ name, link }) {\r\n    api.addNewCard({ name, link }).then((newCard) => {\r\n\r\n      // Обновляем стейт карточек\r\n      setCards([newCard, ...cards]);\r\n      closeAllPopups();\r\n    })\r\n      .catch((err) => {\r\n        renderError(`Ошибка: ${err}`);\r\n      });\r\n  }\r\n\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setIsImageCardPopupOpen(false);\r\n    setIsSubmitPopupOpen(false);\r\n\r\n    setSelectedCard({});\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfo().then((initialUserInfo) => {\r\n\r\n      setCurrentUser(initialUserInfo);\r\n    }\r\n    )\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    api.getCardsFromServer().then((initialCardList) => {\r\n      const cardList = initialCardList.map(card => card);\r\n      setCards(cardList);\r\n    })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='page'>\r\n        <div className='page__container'>\r\n          <Header />\r\n          <Main\r\n            cards={cards}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onCardClick={handleCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n\r\n          <Footer />\r\n\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n\r\n\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n          />\r\n\r\n          <PopupWithForm\r\n            name='delete-submit'\r\n            title='Вы уверены?'\r\n            submitName='Да'\r\n            isOpen={isSubmitPopupOpen}\r\n            onClose={closeAllPopups}>\r\n          </PopupWithForm>\r\n\r\n          <ImagePopup\r\n            name='img'\r\n            isOpen={isImageCardPopupOpen}\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}>\r\n          </ImagePopup>\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";"],"sourceRoot":""}